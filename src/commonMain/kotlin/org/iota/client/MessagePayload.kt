// Automatically generated by flapigen
package org.iota.client

import kotlin.jvm.Synchronized

/**
 * Message payload wrapper
 */
class MessagePayload {
    override fun toString(): String {
        run { return this.to_string() }
    }

     constructor() {}

    private fun to_string(): String {
        return do_to_string(mNativeObj)
    }

    /**
     * Get the type of message this contains (used to select the correct getter)
     */
    fun payloadType(): org.iota.client.MessagePayloadType {
        val ret = do_payloadType(mNativeObj)
        return org.iota.client.MessagePayloadType.fromInt(ret)
    }

    fun asIndexation(): IndexationPayload {
        val ret = do_asIndexation(mNativeObj)
        return IndexationPayload(InternalPointerMarker.RAW_PTR, ret)
    }

    fun asMilestone(): org.iota.client.MilestonePayload {
        val ret = do_asMilestone(mNativeObj)
        return org.iota.client.MilestonePayload(InternalPointerMarker.RAW_PTR, ret)
    }

    fun asTransaction(): TransactionPayload {
        val ret = do_asTransaction(mNativeObj)
        return TransactionPayload(InternalPointerMarker.RAW_PTR, ret)
    }

    fun asReceipt(): ReceiptPayload {
        val ret = do_asReceipt(mNativeObj)
        return ReceiptPayload(InternalPointerMarker.RAW_PTR, ret)
    }

    fun asTreasury(): TreasuryPayload {
        val ret = do_asTreasury(mNativeObj)
        return TreasuryPayload(InternalPointerMarker.RAW_PTR, ret)
    }

    /**
     * Serializes the message payload into a json string
     */
    fun serialize(): String {
        return do_serialize(mNativeObj)
    }

    @Synchronized
    fun delete() {
        if (mNativeObj != 0L) {
            do_delete(mNativeObj)
            mNativeObj = 0
        }
    }

    @Throws(Throwable::class)
    protected fun finalize() {
        try {
            delete()
        } finally {
           // super.finalize()
        }
    }

    /*package*/
    internal constructor(marker: InternalPointerMarker, ptr: Long) {
        check(marker === InternalPointerMarker.RAW_PTR)
        mNativeObj = ptr
    }

    /*package*/
    var mNativeObj: Long = 0

    companion object {
        private external fun do_to_string(self: Long): String

        /**
         * Turns a serialized message payload string back into its class
         */
        fun deserialize(serialised_data: String): MessagePayload {
            val ret = do_deserialize(serialised_data)
            return MessagePayload(InternalPointerMarker.RAW_PTR, ret)
        }

        private external fun do_deserialize(serialised_data: String): Long
        private external fun do_payloadType(self: Long): Int
        private external fun do_asIndexation(self: Long): Long
        private external fun do_asMilestone(self: Long): Long
        private external fun do_asTransaction(self: Long): Long
        private external fun do_asReceipt(self: Long): Long
        private external fun do_asTreasury(self: Long): Long
        private external fun do_serialize(self: Long): String
        private external fun do_delete(me: Long)
    }
}