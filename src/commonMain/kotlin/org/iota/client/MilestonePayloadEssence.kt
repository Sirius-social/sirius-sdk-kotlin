// Automatically generated by flapigen
package org.iota.client

import kotlin.jvm.Synchronized

class MilestonePayloadEssence {
    override fun toString(): String {
        run { return this.to_string() }
    }

    private constructor() {}

    private fun to_string(): String {
        return do_to_string(mNativeObj)
    }

    /**
     * Returns the index of a `MilestonePayloadEssence`.
     */
    fun index(): Long {
        return do_index(mNativeObj)
    }

    /**
     * Returns the timestamp of a `MilestonePayloadEssence`.
     */
    fun timestamp(): Long {
        return do_timestamp(mNativeObj)
    }

    /**
     * Returns the parents of a `MilestonePayloadEssence`.
     */
    fun parents(): Array<MessageId> {
        return do_parents(mNativeObj)
    }

    /**
     * Returns the merkle proof of a `MilestonePayloadEssence`.
     */
    fun merkleProof(): ByteArray {
        return do_merkleProof(mNativeObj)
    }

    /**
     * Returns the next proof of work score of a `MilestonePayloadEssence`.
     */
    fun nextPowScore(): Long {
        return do_nextPowScore(mNativeObj)
    }

    /**
     * Returns the next proof of work index of a `MilestonePayloadEssence`.
     */
    fun nextPowScoreMilestone(): Long {
        return do_nextPowScoreMilestone(mNativeObj)
    }

    /**
     * Returns the public keys of a `MilestonePayloadEssence`.
     */
    fun publicKeys(): Array<PublicKey> {
        return do_publicKeys(mNativeObj)
    }

    /**
     * Returns the optional receipt of a `MilestonePayloadEssence`.
     */
    fun receipt(): ReceiptPayload? {
        val ret = do_receipt(mNativeObj)
        val convRet: ReceiptPayload? = if (ret != 0L) {
                ReceiptPayload(
                    InternalPointerMarker.RAW_PTR,
                    ret
                )

        } else {
            null
        }
        return convRet
    }

    /**
     * Hashes the `MilestonePayloadEssence to be signed.`
     */
    fun hash(): ByteArray {
        return do_hash(mNativeObj)
    }

    @Synchronized
    fun delete() {
        if (mNativeObj != 0L) {
            do_delete(mNativeObj)
            mNativeObj = 0
        }
    }

    @Throws(Throwable::class)
    protected fun finalize() {
        try {
            delete()
        } finally {
         //   super.finalize()
        }
    }

    /*package*/
    internal constructor(marker: InternalPointerMarker, ptr: Long) {
        check(marker === InternalPointerMarker.RAW_PTR)
        mNativeObj = ptr
    }

    /*package*/
    var mNativeObj: Long = 0

    companion object {
        private external fun do_to_string(self: Long): String
        private external fun do_index(self: Long): Long
        private external fun do_timestamp(self: Long): Long
        private external fun do_parents(self: Long): Array<MessageId>
        private external fun do_merkleProof(self: Long): ByteArray
        private external fun do_nextPowScore(self: Long): Long
        private external fun do_nextPowScoreMilestone(self: Long): Long
        private external fun do_publicKeys(self: Long): Array<PublicKey>
        private external fun do_receipt(self: Long): Long
        private external fun do_hash(self: Long): ByteArray
        private external fun do_delete(me: Long)
    }
}